{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSpecialAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "form",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimal",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getSpAd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeSpecialAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200119b3803806200119b8339810160408190526200003491620002b3565b81816003620000448382620003ab565b506004620000538282620003ab565b5050336000818152600860205260409020805460ff191660011790556200008b9150620000856012620f42406200048d565b62000093565b5050620004c3565b3360009081526008602052604090205460ff16620001115760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7920746865207370656369616c20616464726573732063616e2063616c60448201526f36103a3434b990333ab731ba34b7b71760811b60648201526084015b60405180910390fd5b6200011d828262000121565b5050565b6001600160a01b038216620001795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000108565b80600260008282546200018d9190620004ad565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200011d600083835b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021657600080fd5b81516001600160401b0380821115620002335762000233620001ee565b604051601f8301601f19908116603f011681019082821181831017156200025e576200025e620001ee565b816040528381526020925086838588010111156200027b57600080fd5b600091505b838210156200029f578582018301518183018401529082019062000280565b600093810190920192909252949350505050565b60008060408385031215620002c757600080fd5b82516001600160401b0380821115620002df57600080fd5b620002ed8683870162000204565b935060208501519150808211156200030457600080fd5b50620003138582860162000204565b9150509250929050565b600181811c908216806200033257607f821691505b6020821081036200035357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e957600081815260208120601f850160051c81016020861015620003825750805b601f850160051c820191505b81811015620003a3578281556001016200038e565b505050505050565b81516001600160401b03811115620003c757620003c7620001ee565b620003df81620003d884546200031d565b8462000359565b602080601f831160018114620004175760008415620003fe5750858301515b600019600386901b1c1916600185901b178555620003a3565b600085815260208120601f198616915b82811015620004485788860151825594840194600190910190840162000427565b5085821015620004675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620004a757620004a762000477565b92915050565b80820180821115620004a757620004a762000477565b610cc880620004d36000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806340c10f19116100a257806395d89b411161007157806395d89b41146102365780639dc29fac1461023e578063a457c2d714610251578063a9059cbb14610264578063dd62ed3e1461027757600080fd5b806340c10f19146101df57806366e03f12146101f257806370a082311461020557806376809ce31461022e57600080fd5b806323b872dd116100de57806323b872dd14610178578063313ce5671461018b57806339509351146101a05780633a573834146101b357600080fd5b806306fdde0314610110578063095ea7b31461012e57806317bfd3641461015157806318160ddd14610166575b600080fd5b61011861028a565b6040516101259190610ac2565b60405180910390f35b61014161013c366004610b2c565b61031c565b6040519015158152602001610125565b61016461015f366004610b56565b610336565b005b6002545b604051908152602001610125565b610141610186366004610b78565b610392565b60125b60405160ff9091168152602001610125565b6101416101ae366004610b2c565b6103b6565b6101416101c1366004610b56565b6001600160a01b031660009081526008602052604090205460ff1690565b6101646101ed366004610b2c565b6103d8565b610164610200366004610b56565b610415565b61016a610213366004610b56565b6001600160a01b031660009081526020819052604090205490565b61018e601281565b610118610465565b61016461024c366004610b2c565b610474565b61014161025f366004610b2c565b6104ad565b610141610272366004610b2c565b610528565b61016a610285366004610bb4565b61056b565b60606003805461029990610be7565b80601f01602080910402602001604051908101604052809291908181526020018280546102c590610be7565b80156103125780601f106102e757610100808354040283529160200191610312565b820191906000526020600020905b8154815290600101906020018083116102f557829003601f168201915b5050505050905090565b60003361032a818585610596565b60019150505b92915050565b3360009081526008602052604090205460ff1661036e5760405162461bcd60e51b815260040161036590610c21565b60405180910390fd5b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6000336103a08582856106bb565b6103ab858585610735565b506001949350505050565b60003361032a8185856103c9838361056b565b6103d39190610c71565b610596565b3360009081526008602052604090205460ff166104075760405162461bcd60e51b815260040161036590610c21565b61041182826108d9565b5050565b3360009081526008602052604090205460ff166104445760405162461bcd60e51b815260040161036590610c21565b6001600160a01b03166000908152600860205260409020805460ff19169055565b60606004805461029990610be7565b3360009081526008602052604090205460ff166104a35760405162461bcd60e51b815260040161036590610c21565b6104118282610998565b600033816104bb828661056b565b90508381101561051b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610365565b6103ab8286868403610596565b3360009081526008602052604081205460ff166105575760405162461bcd60e51b815260040161036590610c21565b610562338484610735565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610365565b6001600160a01b0382166106595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610365565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106c7848461056b565b9050600019811461072f57818110156107225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610365565b61072f8484848403610596565b50505050565b6001600160a01b0383166107995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610365565b6001600160a01b0382166107fb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610365565b6001600160a01b038316600090815260208190526040902054818110156108735760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610365565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361072f565b6001600160a01b03821661092f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610365565b80600260008282546109419190610c71565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109f85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610365565b6001600160a01b03821660009081526020819052604090205481811015610a6c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610365565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106ae565b600060208083528351808285015260005b81811015610aef57858101830151858201604001528201610ad3565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b2757600080fd5b919050565b60008060408385031215610b3f57600080fd5b610b4883610b10565b946020939093013593505050565b600060208284031215610b6857600080fd5b610b7182610b10565b9392505050565b600080600060608486031215610b8d57600080fd5b610b9684610b10565b9250610ba460208501610b10565b9150604084013590509250925092565b60008060408385031215610bc757600080fd5b610bd083610b10565b9150610bde60208401610b10565b90509250929050565b600181811c90821680610bfb57607f821691505b602082108103610c1b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526030908201527f4f6e6c7920746865207370656369616c20616464726573732063616e2063616c60408201526f36103a3434b990333ab731ba34b7b71760811b606082015260800190565b8082018082111561033057634e487b7160e01b600052601160045260246000fdfea2646970667358221220628f90d9819e20ee619108705a449086c7bf912454e5214043012535ff5dcc1e64736f6c63430008110033",
    "sourceMap": "383:1503:26:-:0;;;676:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;736:4;742:6;2042:5:17;:13;736:4:26;2042:5:17;:13;:::i;:::-;-1:-1:-1;2065:7:17;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;778:10:26::1;760:29;::::0;;;:17:::1;:29;::::0;;;;:36;;-1:-1:-1;;760:36:26::1;792:4;760:36;::::0;;806:42:::1;::::0;-1:-1:-1;823:24:26::1;483:2;823:7;:24;:::i;:::-;806:4;:42::i;:::-;676:222:::0;;383:1503;;1671:102;1042:10;1024:29;;;;:17;:29;;;;;;;;1016:90;;;;-1:-1:-1;;;1016:90:26;;4654:2:28;1016:90:26;;;4636:21:28;4693:2;4673:18;;;4666:30;4732:34;4712:18;;;4705:62;-1:-1:-1;;;4783:18:28;;;4776:46;4839:19;;1016:90:26;;;;;;;;;1750:16:::1;1756:2:::0;1759:6;1750:5:::1;:16::i;:::-;1671:102:::0;;:::o;8567:535:17:-;-1:-1:-1;;;;;8650:21:17;;8642:65;;;;-1:-1:-1;;;8642:65:17;;5071:2:28;8642:65:17;;;5053:21:28;5110:2;5090:18;;;5083:30;5149:33;5129:18;;;5122:61;5200:18;;8642:65:17;4869:355:28;8642:65:17;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:17;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;5505:25:28;;;8999:37:17;;5478:18:28;8999:37:17;;;;;;;9047:48;9075:1;9079:7;9088:6;12180:121;;;;:::o;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:28;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:28;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:28:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:28;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:28;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:28;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:28;;;3992:26;3943:89;-1:-1:-1;;2747:1:28;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:28;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:28;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:28;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:28:o;4147:127::-;4208:10;4203:3;4199:20;4196:1;4189:31;4239:4;4236:1;4229:15;4263:4;4260:1;4253:15;4279:168;4352:9;;;4383;;4400:15;;;4394:22;;4380:37;4370:71;;4421:18;;:::i;:::-;4279:168;;;;:::o;5229:125::-;5294:9;;;5315:10;;;5312:36;;;5328:18;;:::i;5359:177::-;383:1503:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806340c10f19116100a257806395d89b411161007157806395d89b41146102365780639dc29fac1461023e578063a457c2d714610251578063a9059cbb14610264578063dd62ed3e1461027757600080fd5b806340c10f19146101df57806366e03f12146101f257806370a082311461020557806376809ce31461022e57600080fd5b806323b872dd116100de57806323b872dd14610178578063313ce5671461018b57806339509351146101a05780633a573834146101b357600080fd5b806306fdde0314610110578063095ea7b31461012e57806317bfd3641461015157806318160ddd14610166575b600080fd5b61011861028a565b6040516101259190610ac2565b60405180910390f35b61014161013c366004610b2c565b61031c565b6040519015158152602001610125565b61016461015f366004610b56565b610336565b005b6002545b604051908152602001610125565b610141610186366004610b78565b610392565b60125b60405160ff9091168152602001610125565b6101416101ae366004610b2c565b6103b6565b6101416101c1366004610b56565b6001600160a01b031660009081526008602052604090205460ff1690565b6101646101ed366004610b2c565b6103d8565b610164610200366004610b56565b610415565b61016a610213366004610b56565b6001600160a01b031660009081526020819052604090205490565b61018e601281565b610118610465565b61016461024c366004610b2c565b610474565b61014161025f366004610b2c565b6104ad565b610141610272366004610b2c565b610528565b61016a610285366004610bb4565b61056b565b60606003805461029990610be7565b80601f01602080910402602001604051908101604052809291908181526020018280546102c590610be7565b80156103125780601f106102e757610100808354040283529160200191610312565b820191906000526020600020905b8154815290600101906020018083116102f557829003601f168201915b5050505050905090565b60003361032a818585610596565b60019150505b92915050565b3360009081526008602052604090205460ff1661036e5760405162461bcd60e51b815260040161036590610c21565b60405180910390fd5b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6000336103a08582856106bb565b6103ab858585610735565b506001949350505050565b60003361032a8185856103c9838361056b565b6103d39190610c71565b610596565b3360009081526008602052604090205460ff166104075760405162461bcd60e51b815260040161036590610c21565b61041182826108d9565b5050565b3360009081526008602052604090205460ff166104445760405162461bcd60e51b815260040161036590610c21565b6001600160a01b03166000908152600860205260409020805460ff19169055565b60606004805461029990610be7565b3360009081526008602052604090205460ff166104a35760405162461bcd60e51b815260040161036590610c21565b6104118282610998565b600033816104bb828661056b565b90508381101561051b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610365565b6103ab8286868403610596565b3360009081526008602052604081205460ff166105575760405162461bcd60e51b815260040161036590610c21565b610562338484610735565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610365565b6001600160a01b0382166106595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610365565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106c7848461056b565b9050600019811461072f57818110156107225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610365565b61072f8484848403610596565b50505050565b6001600160a01b0383166107995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610365565b6001600160a01b0382166107fb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610365565b6001600160a01b038316600090815260208190526040902054818110156108735760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610365565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361072f565b6001600160a01b03821661092f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610365565b80600260008282546109419190610c71565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109f85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610365565b6001600160a01b03821660009081526020819052604090205481811015610a6c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610365565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106ae565b600060208083528351808285015260005b81811015610aef57858101830151858201604001528201610ad3565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b2757600080fd5b919050565b60008060408385031215610b3f57600080fd5b610b4883610b10565b946020939093013593505050565b600060208284031215610b6857600080fd5b610b7182610b10565b9392505050565b600080600060608486031215610b8d57600080fd5b610b9684610b10565b9250610ba460208501610b10565b9150604084013590509250925092565b60008060408385031215610bc757600080fd5b610bd083610b10565b9150610bde60208401610b10565b90509250929050565b600181811c90821680610bfb57607f821691505b602082108103610c1b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526030908201527f4f6e6c7920746865207370656369616c20616464726573732063616e2063616c60408201526f36103a3434b990333ab731ba34b7b71760811b606082015260800190565b8082018082111561033057634e487b7160e01b600052601160045260246000fdfea2646970667358221220628f90d9819e20ee619108705a449086c7bf912454e5214043012535ff5dcc1e64736f6c63430008110033",
    "sourceMap": "383:1503:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:28;;1162:22;1144:41;;1132:2;1117:18;4431:197:17;1004:187:28;1130:113:26;;;;;;:::i;:::-;;:::i;:::-;;3242:106:17;3329:12;;3242:106;;;1533:25:28;;;1521:2;1506:18;3242:106:17;1387:177:28;5190:286:17;;;;;;:::i;:::-;;:::i;3091:91::-;3173:2;3091:91;;;2074:4:28;2062:17;;;2044:36;;2032:2;2017:18;3091:91:17;1902:184:28;5871:234:17;;;;;;:::i;:::-;;:::i;1372:109:26:-;;;;;;:::i;:::-;-1:-1:-1;;;;;1448:26:26;1424:4;1448:26;;;:17;:26;;;;;;;;;1372:109;1671:102;;;;;;:::i;:::-;;:::i;1249:117::-;;;;;;:::i;:::-;;:::i;3406:125:17:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:17;3480:7;3506:18;;;;;;;;;;;;3406:125;451:34:26;;483:2;451:34;;2365:102:17;;;:::i;1779:104:26:-;;;;;;:::i;:::-;;:::i;6592:427:17:-;;;;;;:::i;:::-;;:::i;1487:174:26:-;;;;;;:::i;:::-;;:::i;3974:149:17:-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:23;4568:32:17;719:10:23;4584:7:17;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;1130:113:26:-;1042:10;1024:29;;;;:17;:29;;;;;;;;1016:90;;;;-1:-1:-1;;;1016:90:26;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1203:26:26::1;;::::0;;;:17:::1;:26;::::0;;;;:33;;-1:-1:-1;;1203:33:26::1;1232:4;1203:33;::::0;;1130:113::o;5190:286:17:-;5317:4;719:10:23;5373:38:17;5389:4;719:10:23;5404:6:17;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:17;;5190:286;-1:-1:-1;;;;5190:286:17:o;5871:234::-;5959:4;719:10:23;6013:64:17;719:10:23;6029:7:17;6066:10;6038:25;719:10:23;6029:7:17;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1671:102:26:-;1042:10;1024:29;;;;:17;:29;;;;;;;;1016:90;;;;-1:-1:-1;;;1016:90:26;;;;;;;:::i;:::-;1750:16:::1;1756:2;1759:6;1750:5;:16::i;:::-;1671:102:::0;;:::o;1249:117::-;1042:10;1024:29;;;;:17;:29;;;;;;;;1016:90;;;;-1:-1:-1;;;1016:90:26;;;;;;;:::i;:::-;-1:-1:-1;;;;;1325:26:26::1;1354:5;1325:26:::0;;;:17:::1;:26;::::0;;;;:34;;-1:-1:-1;;1325:34:26::1;::::0;;1249:117::o;2365:102:17:-;2421:13;2453:7;2446:14;;;;;:::i;1779:104:26:-;1042:10;1024:29;;;;:17;:29;;;;;;;;1016:90;;;;-1:-1:-1;;;1016:90:26;;;;;;;:::i;:::-;1857:19:::1;1863:4;1869:6;1857:5;:19::i;6592:427:17:-:0;6685:4;719:10:23;6685:4:17;6766:25;719:10:23;6783:7:17;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:17;;3587:2:28;6801:85:17;;;3569:21:28;3626:2;3606:18;;;3599:30;3665:34;3645:18;;;3638:62;-1:-1:-1;;;3716:18:28;;;3709:35;3761:19;;6801:85:17;3385:401:28;6801:85:17;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;1487:174:26:-;1042:10;1577:4;1024:29;;;:17;:29;;;;;;;;1016:90;;;;-1:-1:-1;;;1016:90:26;;;;;;;:::i;:::-;1593:40:::1;1603:10;1615:9;1626:6;1593:9;:40::i;:::-;-1:-1:-1::0;1650:4:26::1;1487:174:::0;;;;:::o;3974:149:17:-;-1:-1:-1;;;;;4089:18:17;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:17;;10627:68;;;;-1:-1:-1;;;10627:68:17;;3993:2:28;10627:68:17;;;3975:21:28;4032:2;4012:18;;;4005:30;4071:34;4051:18;;;4044:62;-1:-1:-1;;;4122:18:28;;;4115:34;4166:19;;10627:68:17;3791:400:28;10627:68:17;-1:-1:-1;;;;;10713:21:17;;10705:68;;;;-1:-1:-1;;;10705:68:17;;4398:2:28;10705:68:17;;;4380:21:28;4437:2;4417:18;;;4410:30;4476:34;4456:18;;;4449:62;-1:-1:-1;;;4527:18:28;;;4520:32;4569:19;;10705:68:17;4196:398:28;10705:68:17;-1:-1:-1;;;;;10784:18:17;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1533:25:28;;;10835:32:17;;1506:18:28;10835:32:17;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:17;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:17;;4801:2:28;11404:68:17;;;4783:21:28;4840:2;4820:18;;;4813:30;4879:31;4859:18;;;4852:59;4928:18;;11404:68:17;4599:353:28;11404:68:17;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:17;;7591:68;;;;-1:-1:-1;;;7591:68:17;;5159:2:28;7591:68:17;;;5141:21:28;5198:2;5178:18;;;5171:30;5237:34;5217:18;;;5210:62;-1:-1:-1;;;5288:18:28;;;5281:35;5333:19;;7591:68:17;4957:401:28;7591:68:17;-1:-1:-1;;;;;7677:16:17;;7669:64;;;;-1:-1:-1;;;7669:64:17;;5565:2:28;7669:64:17;;;5547:21:28;5604:2;5584:18;;;5577:30;5643:34;5623:18;;;5616:62;-1:-1:-1;;;5694:18:28;;;5687:33;5737:19;;7669:64:17;5363:399:28;7669:64:17;-1:-1:-1;;;;;7815:15:17;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:17;;5969:2:28;7840:72:17;;;5951:21:28;6008:2;5988:18;;;5981:30;6047:34;6027:18;;;6020:62;-1:-1:-1;;;6098:18:28;;;6091:36;6144:19;;7840:72:17;5767:402:28;7840:72:17;-1:-1:-1;;;;;7946:15:17;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1533:25:28;;;8161:13:17;;8210:26;;1506:18:28;8210:26:17;;;;;;;8247:37;9422:659;8567:535;-1:-1:-1;;;;;8650:21:17;;8642:65;;;;-1:-1:-1;;;8642:65:17;;6376:2:28;8642:65:17;;;6358:21:28;6415:2;6395:18;;;6388:30;6454:33;6434:18;;;6427:61;6505:18;;8642:65:17;6174:355:28;8642:65:17;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:17;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1533:25:28;;;8999:37:17;;1506:18:28;8999:37:17;;;;;;;1671:102:26;;:::o;9422:659:17:-;-1:-1:-1;;;;;9505:21:17;;9497:67;;;;-1:-1:-1;;;9497:67:17;;6736:2:28;9497:67:17;;;6718:21:28;6775:2;6755:18;;;6748:30;6814:34;6794:18;;;6787:62;-1:-1:-1;;;6865:18:28;;;6858:31;6906:19;;9497:67:17;6534:397:28;9497:67:17;-1:-1:-1;;;;;9660:18:17;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:17;;7138:2:28;9688:71:17;;;7120:21:28;7177:2;7157:18;;;7150:30;7216:34;7196:18;;;7189:62;-1:-1:-1;;;7267:18:28;;;7260:32;7309:19;;9688:71:17;6936:398:28;9688:71:17;-1:-1:-1;;;;;9793:18:17;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1533:25:28;;;9793:9:17;;:18;9978:37;;1506:18:28;9978:37:17;1387:177:28;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:28;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:28:o;1196:186::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;1347:29;1366:9;1347:29;:::i;:::-;1337:39;1196:186;-1:-1:-1;;;1196:186:28:o;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:412::-;2943:2;2925:21;;;2982:2;2962:18;;;2955:30;3021:34;3016:2;3001:18;;2994:62;-1:-1:-1;;;3087:2:28;3072:18;;3065:46;3143:3;3128:19;;2741:412::o;3158:222::-;3223:9;;;3244:10;;;3241:133;;;3296:10;3291:3;3287:20;3284:1;3277:31;3331:4;3328:1;3321:15;3359:4;3356:1;3349:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addSpecialAddress(address)": "17bfd364",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimal()": "76809ce3",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getSpAd(address)": "3a573834",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "removeSpecialAddress(address)": "66e03f12",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSpecialAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"form\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getSpAd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeSpecialAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GodMode.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc1363-payable-token/=lib/erc1363-payable-token/\",\":erc1363/=lib/erc1363-payable-token/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]},\"src/GodMode.sol\":{\"keccak256\":\"0xb67e86efa565ee84f75d6af5c835b79bdc3f3ea59ddf5ae4614b7caa50facfbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96269afe874bce6f0bcb1b13f48d15c3ecee6f5a2ef2276a5dbdbbd2e1be5926\",\"dweb:/ipfs/QmdVwyzTCkhwnDSHq5jDXtStbc3ifQZUj8mKZQ1u1N3KS8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSpecialAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "form",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimal",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getSpAd",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSpecialAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc1363-payable-token/=lib/erc1363-payable-token/",
        ":erc1363/=lib/erc1363-payable-token/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GodMode.sol": "Token"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/GodMode.sol": {
        "keccak256": "0xb67e86efa565ee84f75d6af5c835b79bdc3f3ea59ddf5ae4614b7caa50facfbd",
        "urls": [
          "bzz-raw://96269afe874bce6f0bcb1b13f48d15c3ecee6f5a2ef2276a5dbdbbd2e1be5926",
          "dweb:/ipfs/QmdVwyzTCkhwnDSHq5jDXtStbc3ifQZUj8mKZQ1u1N3KS8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GodMode.sol",
    "id": 30250,
    "exportedSymbols": {
      "Address": [
        29725
      ],
      "Context": [
        29747
      ],
      "ERC20": [
        28975
      ],
      "IERC20": [
        29053
      ],
      "IERC20Metadata": [
        29078
      ],
      "IERC20Permit": [
        29114
      ],
      "ReentrancyGuard": [
        30085
      ],
      "SafeERC20": [
        29395
      ],
      "SafeMath": [
        30059
      ],
      "Token": [
        30249
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1854:26",
    "nodes": [
      {
        "id": 30087,
        "nodeType": "PragmaDirective",
        "src": "32:23:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 30088,
        "nodeType": "ImportDirective",
        "src": "57:66:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30250,
        "sourceUnit": 29054,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30089,
        "nodeType": "ImportDirective",
        "src": "124:67:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30250,
        "sourceUnit": 30060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30090,
        "nodeType": "ImportDirective",
        "src": "192:65:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30250,
        "sourceUnit": 28976,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30091,
        "nodeType": "ImportDirective",
        "src": "258:47:26",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/ReentrancyGuard.sol",
        "file": "solmate/src/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30250,
        "sourceUnit": 30086,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30092,
        "nodeType": "ImportDirective",
        "src": "306:75:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30250,
        "sourceUnit": 29396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30249,
        "nodeType": "ContractDefinition",
        "src": "383:1503:26",
        "nodes": [
          {
            "id": 30096,
            "nodeType": "VariableDeclaration",
            "src": "416:28:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "432:12:26",
            "scope": 30249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30095,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 30099,
            "nodeType": "VariableDeclaration",
            "src": "451:34:26",
            "nodes": [],
            "constant": true,
            "functionSelector": "76809ce3",
            "mutability": "constant",
            "name": "decimal",
            "nameLocation": "473:7:26",
            "scope": 30249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 30097,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "451:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 30098,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "483:2:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "id": 30103,
            "nodeType": "VariableDeclaration",
            "src": "495:45:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "531:9:26",
            "scope": 30249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 30102,
              "keyType": {
                "id": 30100,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "503:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "495:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 30101,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "514:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 30109,
            "nodeType": "VariableDeclaration",
            "src": "546:67:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "602:11:26",
            "scope": 30249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 30108,
              "keyType": {
                "id": 30104,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "554:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "546:47:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 30107,
                "keyType": {
                  "id": 30105,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "573:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "565:27:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 30106,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "584:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 30113,
            "nodeType": "VariableDeclaration",
            "src": "619:50:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_specialAddresses",
            "nameLocation": "652:17:26",
            "scope": 30249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 30112,
              "keyType": {
                "id": 30110,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "619:24:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 30111,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "638:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 30143,
            "nodeType": "FunctionDefinition",
            "src": "676:222:26",
            "nodes": [],
            "body": {
              "id": 30142,
              "nodeType": "Block",
              "src": "750:148:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30124,
                        "name": "_specialAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30113,
                        "src": "760:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 30127,
                      "indexExpression": {
                        "expression": {
                          "id": 30125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "778:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "782:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "778:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "760:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 30128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "792:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "760:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30130,
                  "nodeType": "ExpressionStatement",
                  "src": "760:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "811:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "815:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "811:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030",
                          "id": 30134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "823:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30137,
                              "name": "decimal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30099,
                              "src": "839:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 30136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "831:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30135,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "831:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "831:16:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "823:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30131,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30233,
                      "src": "806:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 30140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30141,
                  "nodeType": "ExpressionStatement",
                  "src": "806:42:26"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30120,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30115,
                    "src": "736:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 30121,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30117,
                    "src": "742:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 30122,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 30119,
                  "name": "ERC20",
                  "nameLocations": [
                    "730:5:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28975,
                  "src": "730:5:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "730:19:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 30118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30115,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "702:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30143,
                  "src": "688:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30114,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30117,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "722:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30143,
                  "src": "708:20:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:42:26"
            },
            "returnParameters": {
              "id": 30123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30156,
            "nodeType": "ModifierDefinition",
            "src": "983:141:26",
            "nodes": [],
            "body": {
              "id": 30155,
              "nodeType": "Block",
              "src": "1006:118:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30147,
                          "name": "_specialAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30113,
                          "src": "1024:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 30150,
                        "indexExpression": {
                          "expression": {
                            "id": 30148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1042:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1046:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1042:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1024:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865207370656369616c20616464726573732063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 30151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1055:50:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb6790a3397d36ab0f6b4d11fe930699f20cf3cafd5cb0cc52d7c0c21f4d14da",
                          "typeString": "literal_string \"Only the special address can call this function.\""
                        },
                        "value": "Only the special address can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb6790a3397d36ab0f6b4d11fe930699f20cf3cafd5cb0cc52d7c0c21f4d14da",
                          "typeString": "literal_string \"Only the special address can call this function.\""
                        }
                      ],
                      "id": 30146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1016:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:90:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30153,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:90:26"
                },
                {
                  "id": 30154,
                  "nodeType": "PlaceholderStatement",
                  "src": "1116:1:26"
                }
              ]
            },
            "documentation": {
              "id": 30144,
              "nodeType": "StructuredDocumentation",
              "src": "901:77:26",
              "text": " @dev only this special address allowed to mint and transfer toekns"
            },
            "name": "onlySpecial",
            "nameLocation": "992:11:26",
            "parameters": {
              "id": 30145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30170,
            "nodeType": "FunctionDefinition",
            "src": "1130:113:26",
            "nodes": [],
            "body": {
              "id": 30169,
              "nodeType": "Block",
              "src": "1193:50:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30163,
                        "name": "_specialAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30113,
                        "src": "1203:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 30165,
                      "indexExpression": {
                        "id": 30164,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "1221:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1203:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 30166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1232:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1203:33:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30168,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:33:26"
                }
              ]
            },
            "functionSelector": "17bfd364",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30160,
                  "name": "onlySpecial",
                  "nameLocations": [
                    "1181:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30156,
                  "src": "1181:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1181:11:26"
              }
            ],
            "name": "addSpecialAddress",
            "nameLocation": "1139:17:26",
            "parameters": {
              "id": 30159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30158,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1165:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30170,
                  "src": "1157:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:17:26"
            },
            "returnParameters": {
              "id": 30162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30184,
            "nodeType": "FunctionDefinition",
            "src": "1249:117:26",
            "nodes": [],
            "body": {
              "id": 30183,
              "nodeType": "Block",
              "src": "1315:51:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30177,
                        "name": "_specialAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30113,
                        "src": "1325:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 30179,
                      "indexExpression": {
                        "id": 30178,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30172,
                        "src": "1343:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1325:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 30180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1354:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1325:34:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30182,
                  "nodeType": "ExpressionStatement",
                  "src": "1325:34:26"
                }
              ]
            },
            "functionSelector": "66e03f12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30174,
                  "name": "onlySpecial",
                  "nameLocations": [
                    "1303:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30156,
                  "src": "1303:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1303:11:26"
              }
            ],
            "name": "removeSpecialAddress",
            "nameLocation": "1258:20:26",
            "parameters": {
              "id": 30173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30172,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1287:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30184,
                  "src": "1279:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:17:26"
            },
            "returnParameters": {
              "id": 30176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30196,
            "nodeType": "FunctionDefinition",
            "src": "1372:109:26",
            "nodes": [],
            "body": {
              "id": 30195,
              "nodeType": "Block",
              "src": "1430:51:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 30191,
                      "name": "_specialAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30113,
                      "src": "1448:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 30193,
                    "indexExpression": {
                      "id": 30192,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30186,
                      "src": "1466:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1448:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30190,
                  "id": 30194,
                  "nodeType": "Return",
                  "src": "1440:34:26"
                }
              ]
            },
            "functionSelector": "3a573834",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSpAd",
            "nameLocation": "1381:7:26",
            "parameters": {
              "id": 30187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30186,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1397:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30196,
                  "src": "1389:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:17:26"
            },
            "returnParameters": {
              "id": 30190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30196,
                  "src": "1424:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1423:6:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30218,
            "nodeType": "FunctionDefinition",
            "src": "1487:174:26",
            "nodes": [],
            "body": {
              "id": 30217,
              "nodeType": "Block",
              "src": "1583:78:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1603:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1607:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1603:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30211,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30198,
                        "src": "1615:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30212,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30200,
                        "src": "1626:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30208,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28735,
                      "src": "1593:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 30213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:40:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30214,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:40:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 30215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1650:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 30207,
                  "id": 30216,
                  "nodeType": "Return",
                  "src": "1643:11:26"
                }
              ]
            },
            "baseFunctions": [
              28512
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30203,
                  "name": "onlySpecial",
                  "nameLocations": [
                    "1556:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30156,
                  "src": "1556:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1556:11:26"
              }
            ],
            "name": "transfer",
            "nameLocation": "1496:8:26",
            "overrides": {
              "id": 30202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1547:8:26"
            },
            "parameters": {
              "id": 30201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30198,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1513:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30218,
                  "src": "1505:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30200,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1532:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30218,
                  "src": "1524:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1504:35:26"
            },
            "returnParameters": {
              "id": 30207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30218,
                  "src": "1577:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1576:6:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30233,
            "nodeType": "FunctionDefinition",
            "src": "1671:102:26",
            "nodes": [],
            "body": {
              "id": 30232,
              "nodeType": "Block",
              "src": "1740:33:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30228,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30220,
                        "src": "1756:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30229,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30222,
                        "src": "1759:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30227,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28792,
                      "src": "1750:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 30230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30231,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:16:26"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30224,
                  "name": "onlySpecial",
                  "nameLocations": [
                    "1728:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30156,
                  "src": "1728:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1728:11:26"
              }
            ],
            "name": "mint",
            "nameLocation": "1680:4:26",
            "parameters": {
              "id": 30223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30220,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1693:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30233,
                  "src": "1685:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30222,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1705:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30233,
                  "src": "1697:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:28:26"
            },
            "returnParameters": {
              "id": 30226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1740:0:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 30248,
            "nodeType": "FunctionDefinition",
            "src": "1779:104:26",
            "nodes": [],
            "body": {
              "id": 30247,
              "nodeType": "Block",
              "src": "1847:36:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30243,
                        "name": "form",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30235,
                        "src": "1863:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30244,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30237,
                        "src": "1869:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30242,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28864,
                      "src": "1857:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 30245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:19:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30246,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:19:26"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30239,
                  "name": "onlySpecial",
                  "nameLocations": [
                    "1835:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30156,
                  "src": "1835:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1835:11:26"
              }
            ],
            "name": "burn",
            "nameLocation": "1788:4:26",
            "parameters": {
              "id": 30238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30235,
                  "mutability": "mutable",
                  "name": "form",
                  "nameLocation": "1801:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30248,
                  "src": "1793:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30237,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1812:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30248,
                  "src": "1807:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:27:26"
            },
            "returnParameters": {
              "id": 30241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1847:0:26"
            },
            "scope": 30249,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30093,
              "name": "ERC20",
              "nameLocations": [
                "401:5:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28975,
              "src": "401:5:26"
            },
            "id": 30094,
            "nodeType": "InheritanceSpecifier",
            "src": "401:5:26"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30249,
          28975,
          29078,
          29053,
          29747
        ],
        "name": "Token",
        "nameLocation": "392:5:26",
        "scope": 30250,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 26
}