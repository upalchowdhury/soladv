{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "add1",
      "outputs": [
        {
          "internalType": "contract Add1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAdd1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "callData",
          "type": "bytes32"
        }
      ],
      "name": "testNonMatchingSelector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061121c8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c806385226c811161008c578063ba414fa611610066578063ba414fa61461018f578063c176f9f3146101a7578063e20c9f71146101ba578063fa7626d4146101c257600080fd5b806385226c811461016a578063916a17c61461017f578063b5508aa91461018757600080fd5b80633670c2f6116100c85780633670c2f61461013d5780633e5e3c23146101455780633f7286f41461014d57806366d9a9a01461015557600080fd5b806235921a146100ee5780630a9254e41461011e5780631ed7831c14610128575b600080fd5b601b54610101906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101266101cf565b005b6101306102e3565b6040516101159190610ea2565b610126610345565b61013061054b565b6101306105ab565b61015d61060b565b6040516101159190610eef565b6101726106fa565b6040516101159190610ff2565b61015d6107ca565b6101726108b0565b610197610980565b6040519015158152602001610115565b6101266101b5366004611054565b610aab565b610130610b32565b6000546101979060ff1681565b73__$9f92e841da69003274da36affccf96c962$__6379502c556040518163ffffffff1660e01b8152600401602060405180830381865af4158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190611085565b6001600160a01b031663c76023166040518163ffffffff1660e01b815260040161027e906020808252600490820152634164643160e01b604082015260600190565b6020604051808303816000875af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190611085565b601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561033b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161031d575b5050505050905090565b601b54604051631506cae560e31b8152602960048201526103f1916001600160a01b03169063a836572890602401602060405180830381865afa158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906110a2565b602a6040518060400160405280601e81526020017f416464312834312920657870656374656420746f2072657475726e2034320000815250610b92565b601b54604051631506cae560e31b81526017600482015261049d916001600160a01b03169063a836572890602401602060405180830381865afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906110a2565b60186040518060400160405280601e81526020017f416464312832332920657870656374656420746f2072657475726e2032340000815250610b92565b601b54604051631506cae560e31b815260006004820152610549916001600160a01b03169063a836572890602401602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c91906110a2565b60016040518060400160405280601c81526020017f4164643128302920657870656374656420746f2072657475726e203100000000815250610b92565b565b6060600f80548060200260200160405190810160405280929190818152602001828054801561033b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161031d575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561033b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161031d575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106f15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106d957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161069b5790505b5050505050815250508152602001906001019061062f565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106f157838290600052602060002001805461073d906110bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610769906110bb565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b50505050508152602001906001019061071e565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106f15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561089857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161085a5790505b505050505081525050815260200190600101906107ee565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156106f15783829060005260206000200180546108f3906110bb565b80601f016020809104026020016040519081016040528092919081815260200182805461091f906110bb565b801561096c5780601f106109415761010080835404028352916020019161096c565b820191906000526020600020905b81548152906001019060200180831161094f57829003601f168201915b5050505050815260200190600101906108d4565b60008054610100900460ff16156109a05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610aa65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a2e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016110f5565b60408051601f1981840301815290829052610a4891611126565b6000604051808303816000865af19150503d8060008114610a85576040519150601f19603f3d011682016040523d82523d6000602084013e610a8a565b606091505b5091505080806020019051810190610aa29190611142565b9150505b919050565b6040805160018082528183019092526000916020808301908036833701905050905063a836572860e01b81600081518110610ae857610ae8611164565b6001600160e01b031990921660209283029190910190910152601b54600090610b1d90839085906001600160a01b0316610bda565b90508015610b2d57610b2d61117a565b505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561033b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161031d575050505050905090565b818314610b2d577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610bc89190611190565b60405180910390a1610b2d8383610c6b565b600082815b8551811015610c3957858181518110610bfa57610bfa611164565b60200260200101516001600160e01b031916826001600160e01b03191603610c2757600092505050610c64565b80610c31816111bf565b915050610bdf565b5060008460805260008060206080875afa905080610c6057600080602060806000885af190505b9150505b9392505050565b808214610d92577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610cdc9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610d92610d96565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e915760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610e3092916020016110f5565b60408051601f1981840301815290829052610e4a91611126565b6000604051808303816000865af19150503d8060008114610e87576040519150601f19603f3d011682016040523d82523d6000602084013e610e8c565b606091505b505050505b6000805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b81811015610ee35783516001600160a01b031683529284019291840191600101610ebe565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610f9357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610f7e5783516001600160e01b0319168252928b019260019290920191908b0190610f54565b50978a01979550505091870191600101610f17565b50919998505050505050505050565b60005b83811015610fbd578181015183820152602001610fa5565b50506000910152565b60008151808452610fde816020860160208601610fa2565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561104757603f19888603018452611035858351610fc6565b94509285019290850190600101611019565b5092979650505050505050565b60006020828403121561106657600080fd5b5035919050565b6001600160a01b038116811461108257600080fd5b50565b60006020828403121561109757600080fd5b8151610c648161106d565b6000602082840312156110b457600080fd5b5051919050565b600181811c908216806110cf57607f821691505b6020821081036110ef57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090611118816004850160208701610fa2565b919091016004019392505050565b60008251611138818460208701610fa2565b9190910192915050565b60006020828403121561115457600080fd5b81518015158114610c6457600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60408152600560408201526422b93937b960d91b6060820152608060208201526000610c646080830184610fc6565b6000600182016111df57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212201fa41c9f80bf842264cd87bd88491cd07f0e1280d68a3f88f9c622774c3bb2fe64736f6c63430008110033",
    "sourceMap": "379:822:20:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3288:44:3;;;;;;;;;;;379:822:20;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "lib/foundry-huff/src/HuffDeployer.sol": {
        "HuffDeployer": [
          {
            "start": 526,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100e95760003560e01c806385226c811161008c578063ba414fa611610066578063ba414fa61461018f578063c176f9f3146101a7578063e20c9f71146101ba578063fa7626d4146101c257600080fd5b806385226c811461016a578063916a17c61461017f578063b5508aa91461018757600080fd5b80633670c2f6116100c85780633670c2f61461013d5780633e5e3c23146101455780633f7286f41461014d57806366d9a9a01461015557600080fd5b806235921a146100ee5780630a9254e41461011e5780631ed7831c14610128575b600080fd5b601b54610101906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101266101cf565b005b6101306102e3565b6040516101159190610ea2565b610126610345565b61013061054b565b6101306105ab565b61015d61060b565b6040516101159190610eef565b6101726106fa565b6040516101159190610ff2565b61015d6107ca565b6101726108b0565b610197610980565b6040519015158152602001610115565b6101266101b5366004611054565b610aab565b610130610b32565b6000546101979060ff1681565b73__$9f92e841da69003274da36affccf96c962$__6379502c556040518163ffffffff1660e01b8152600401602060405180830381865af4158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190611085565b6001600160a01b031663c76023166040518163ffffffff1660e01b815260040161027e906020808252600490820152634164643160e01b604082015260600190565b6020604051808303816000875af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190611085565b601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561033b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161031d575b5050505050905090565b601b54604051631506cae560e31b8152602960048201526103f1916001600160a01b03169063a836572890602401602060405180830381865afa158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906110a2565b602a6040518060400160405280601e81526020017f416464312834312920657870656374656420746f2072657475726e2034320000815250610b92565b601b54604051631506cae560e31b81526017600482015261049d916001600160a01b03169063a836572890602401602060405180830381865afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906110a2565b60186040518060400160405280601e81526020017f416464312832332920657870656374656420746f2072657475726e2032340000815250610b92565b601b54604051631506cae560e31b815260006004820152610549916001600160a01b03169063a836572890602401602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c91906110a2565b60016040518060400160405280601c81526020017f4164643128302920657870656374656420746f2072657475726e203100000000815250610b92565b565b6060600f80548060200260200160405190810160405280929190818152602001828054801561033b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161031d575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561033b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161031d575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106f15760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106d957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161069b5790505b5050505050815250508152602001906001019061062f565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106f157838290600052602060002001805461073d906110bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610769906110bb565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b50505050508152602001906001019061071e565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106f15760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561089857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161085a5790505b505050505081525050815260200190600101906107ee565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156106f15783829060005260206000200180546108f3906110bb565b80601f016020809104026020016040519081016040528092919081815260200182805461091f906110bb565b801561096c5780601f106109415761010080835404028352916020019161096c565b820191906000526020600020905b81548152906001019060200180831161094f57829003601f168201915b5050505050815260200190600101906108d4565b60008054610100900460ff16156109a05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610aa65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a2e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016110f5565b60408051601f1981840301815290829052610a4891611126565b6000604051808303816000865af19150503d8060008114610a85576040519150601f19603f3d011682016040523d82523d6000602084013e610a8a565b606091505b5091505080806020019051810190610aa29190611142565b9150505b919050565b6040805160018082528183019092526000916020808301908036833701905050905063a836572860e01b81600081518110610ae857610ae8611164565b6001600160e01b031990921660209283029190910190910152601b54600090610b1d90839085906001600160a01b0316610bda565b90508015610b2d57610b2d61117a565b505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561033b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161031d575050505050905090565b818314610b2d577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610bc89190611190565b60405180910390a1610b2d8383610c6b565b600082815b8551811015610c3957858181518110610bfa57610bfa611164565b60200260200101516001600160e01b031916826001600160e01b03191603610c2757600092505050610c64565b80610c31816111bf565b915050610bdf565b5060008460805260008060206080875afa905080610c6057600080602060806000885af190505b9150505b9392505050565b808214610d92577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610cdc9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610d92610d96565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e915760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610e3092916020016110f5565b60408051601f1981840301815290829052610e4a91611126565b6000604051808303816000865af19150503d8060008114610e87576040519150601f19603f3d011682016040523d82523d6000602084013e610e8c565b606091505b505050505b6000805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b81811015610ee35783516001600160a01b031683529284019291840191600101610ebe565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610f9357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610f7e5783516001600160e01b0319168252928b019260019290920191908b0190610f54565b50978a01979550505091870191600101610f17565b50919998505050505050505050565b60005b83811015610fbd578181015183820152602001610fa5565b50506000910152565b60008151808452610fde816020860160208601610fa2565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561104757603f19888603018452611035858351610fc6565b94509285019290850190600101611019565b5092979650505050505050565b60006020828403121561106657600080fd5b5035919050565b6001600160a01b038116811461108257600080fd5b50565b60006020828403121561109757600080fd5b8151610c648161106d565b6000602082840312156110b457600080fd5b5051919050565b600181811c908216806110cf57607f821691505b6020821081036110ef57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090611118816004850160208701610fa2565b919091016004019392505050565b60008251611138818460208701610fa2565b9190910192915050565b60006020828403121561115457600080fd5b81518015158114610c6457600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60408152600560408201526422b93937b960d91b6060820152608060208201526000610c646080830184610fc6565b6000600182016111df57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212201fa41c9f80bf842264cd87bd88491cd07f0e1280d68a3f88f9c622774c3bb2fe64736f6c63430008110033",
    "sourceMap": "379:822:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;438:16;;;;;-1:-1:-1;;;;;438:16:20;;;;;;-1:-1:-1;;;;;192:32:42;;;174:51;;162:2;147:18;438:16:20;;;;;;;;461:90;;;:::i;:::-;;2161:134:6;;;:::i;:::-;;;;;;;:::i;557:243:20:-;;;:::i;2930:133:6:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3975:14:42;;3968:22;3950:41;;3938:2;3923:18;1819:584:0;3810:187:42;864:335:20;;;;;;:::i;:::-;;:::i;2013:142:6:-;;;:::i;1572:26:0:-;;;;;;;;;461:90:20;507:12;:19;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;507:28:20;;:36;;;;;;;;;;;;;4825:2:42;4807:21;;;4864:1;4844:18;;;4837:29;-1:-1:-1;;;4897:2:42;4882:18;;4875:34;4941:2;4926:18;;4623:327;507:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;495:4;:49;;-1:-1:-1;;;;;;495:49:20;-1:-1:-1;;;;;495:49:20;;;;;;;;;;461:90::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;557:243:20:-;603:4;;:13;;-1:-1:-1;;;603:13:20;;613:2;603:13;;;5378:25:42;594:61:20;;-1:-1:-1;;;;;603:4:20;;:9;;5351:18:42;;603:13:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;618:2;594:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;674:4;;:13;;-1:-1:-1;;;674:13:20;;684:2;674:13;;;5378:25:42;665:61:20;;-1:-1:-1;;;;;674:4:20;;:9;;5351:18:42;;674:13:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;689:2;665:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;745:4;;:12;;-1:-1:-1;;;745:12:20;;:4;:12;;;5378:25:42;736:57:20;;-1:-1:-1;;;;;745:4:20;;:9;;5351:18:42;;745:12:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;759:1;736:57;;;;;;;;;;;;;;;;;:8;:57::i;:::-;557:243::o;2930:133:6:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6543:51:42;;;-1:-1:-1;;;6610:18:42;;;6603:34;2196:43:0;;;;;;;;;6516:18:42;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;864:335:20:-;965:15;;;978:1;965:15;;;;;;;;;932:30;;965:15;;;;;;;;;;;-1:-1:-1;965:15:20;932:48;;1010:18;;;990:14;1005:1;990:17;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;990:38:20;;;:17;;;;;;;;;;;:38;1151:4;;1039:12;;1054:112;;1093:14;;1121:8;;-1:-1:-1;;;;;1151:4:20;1054:25;:112::i;:::-;1039:127;;1184:7;1183:8;1176:16;;;;:::i;:::-;922:277;;864:335;:::o;2013:142:6:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5476:178:0:-;5557:1;5552;:6;5548:100;;5579:30;5605:3;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;152:747:41:-;301:4;347:8;301:4;367:161;391:14;:21;387:1;:25;367:161;;;454:14;469:1;454:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;437:34:41;;:13;-1:-1:-1;;;;;437:34:41;;;433:85;;498:5;491:12;;;;;;433:85;414:3;;;;:::i;:::-;;;;367:161;;;;538:12;604:8;598:4;591:22;741:1;738;732:4;726;718:6;711:5;700:43;689:54;;767:7;757:102;;843:1;840;834:4;828;825:1;817:6;810:5;805:40;794:51;;757:102;885:7;-1:-1:-1;;152:747:41;;;;;;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;8897:2:42;8879:21;;;8936:2;8916:18;;;8909:30;8975:34;8970:2;8955:18;;8948:62;-1:-1:-1;;;9041:2:42;9026:18;;9019:32;9083:3;9068:19;;8695:398;5293:41:0;;;;;;;;5353:31;;;9310:21:42;;;9367:2;9347:18;;;9340:30;-1:-1:-1;;;9401:2:42;9386:18;;9379:40;9486:4;9471:20;;9464:36;;;5353:31:0;;;;;;;9451:3:42;5353:31:0;;;5403;;;9723:21:42;;;9780:2;9760:18;;;9753:30;-1:-1:-1;;;9814:2:42;9799:18;;9792:40;9899:4;9884:20;;9877:36;;;5403:31:0;;;;;;;9864:3:42;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;10126:51:42;;;-1:-1:-1;;;10193:18:42;;;10186:34;;;;2712:4:0;10236:18:42;;;10229:34;2489:11:0;;1671:64;2586:43;;10099:18:42;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;236:658:42:-;407:2;459:21;;;529:13;;432:18;;;551:22;;;378:4;;407:2;630:15;;;;604:2;589:18;;;378:4;673:195;687:6;684:1;681:13;673:195;;;752:13;;-1:-1:-1;;;;;748:39:42;736:52;;843:15;;;;808:12;;;;784:1;702:9;673:195;;;-1:-1:-1;885:3:42;;236:658;-1:-1:-1;;;;;;236:658:42:o;899:1567::-;1101:4;1130:2;1170;1159:9;1155:18;1200:2;1189:9;1182:21;1223:6;1258;1252:13;1289:6;1281;1274:22;1315:2;1305:12;;1348:2;1337:9;1333:18;1326:25;;1410:2;1400:6;1397:1;1393:14;1382:9;1378:30;1374:39;1448:2;1440:6;1436:15;1469:1;1490;1500:937;1516:6;1511:3;1508:15;1500:937;;;1585:22;;;-1:-1:-1;;1581:36:42;1569:49;;1641:13;;1728:9;;-1:-1:-1;;;;;1724:35:42;1709:51;;1799:11;;1793:18;1831:15;;;1824:27;;;1912:19;;1681:15;;;1944:24;;;2034:21;;;;2079:1;;2002:2;1990:15;;;2093:236;2109:8;2104:3;2101:17;2093:236;;;2190:15;;-1:-1:-1;;;;;;2186:42:42;2172:57;;2298:17;;;;2137:1;2128:11;;;;;2255:14;;;;2093:236;;;-1:-1:-1;2415:12:42;;;;2352:5;-1:-1:-1;;;2380:15:42;;;;1542:1;1533:11;1500:937;;;-1:-1:-1;2454:6:42;;899:1567;-1:-1:-1;;;;;;;;;899:1567:42:o;2471:250::-;2556:1;2566:113;2580:6;2577:1;2574:13;2566:113;;;2656:11;;;2650:18;2637:11;;;2630:39;2602:2;2595:10;2566:113;;;-1:-1:-1;;2713:1:42;2695:16;;2688:27;2471:250::o;2726:271::-;2768:3;2806:5;2800:12;2833:6;2828:3;2821:19;2849:76;2918:6;2911:4;2906:3;2902:14;2895:4;2888:5;2884:16;2849:76;:::i;:::-;2979:2;2958:15;-1:-1:-1;;2954:29:42;2945:39;;;;2986:4;2941:50;;2726:271;-1:-1:-1;;2726:271:42:o;3002:803::-;3164:4;3193:2;3233;3222:9;3218:18;3263:2;3252:9;3245:21;3286:6;3321;3315:13;3352:6;3344;3337:22;3390:2;3379:9;3375:18;3368:25;;3452:2;3442:6;3439:1;3435:14;3424:9;3420:30;3416:39;3402:53;;3490:2;3482:6;3478:15;3511:1;3521:255;3535:6;3532:1;3529:13;3521:255;;;3628:2;3624:7;3612:9;3604:6;3600:22;3596:36;3591:3;3584:49;3656:40;3689:6;3680;3674:13;3656:40;:::i;:::-;3646:50;-1:-1:-1;3754:12:42;;;;3719:15;;;;3557:1;3550:9;3521:255;;;-1:-1:-1;3793:6:42;;3002:803;-1:-1:-1;;;;;;;3002:803:42:o;4002:180::-;4061:6;4114:2;4102:9;4093:7;4089:23;4085:32;4082:52;;;4130:1;4127;4120:12;4082:52;-1:-1:-1;4153:23:42;;4002:180;-1:-1:-1;4002:180:42:o;4187:143::-;-1:-1:-1;;;;;4274:31:42;;4264:42;;4254:70;;4320:1;4317;4310:12;4254:70;4187:143;:::o;4335:283::-;4425:6;4478:2;4466:9;4457:7;4453:23;4449:32;4446:52;;;4494:1;4491;4484:12;4446:52;4526:9;4520:16;4545:43;4582:5;4545:43;:::i;5414:184::-;5484:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:52;;;5553:1;5550;5543:12;5505:52;-1:-1:-1;5576:16:42;;5414:184;-1:-1:-1;5414:184:42:o;5984:380::-;6063:1;6059:12;;;;6106;;;6127:61;;6181:4;6173:6;6169:17;6159:27;;6127:61;6234:2;6226:6;6223:14;6203:18;6200:38;6197:161;;6280:10;6275:3;6271:20;6268:1;6261:31;6315:4;6312:1;6305:15;6343:4;6340:1;6333:15;6197:161;;5984:380;;;:::o;6648:384::-;-1:-1:-1;;;;;;6833:33:42;;6821:46;;6890:13;;6803:3;;6912:74;6890:13;6975:1;6966:11;;6959:4;6947:17;;6912:74;:::i;:::-;7006:16;;;;7024:1;7002:24;;6648:384;-1:-1:-1;;;6648:384:42:o;7037:287::-;7166:3;7204:6;7198:13;7220:66;7279:6;7274:3;7267:4;7259:6;7255:17;7220:66;:::i;:::-;7302:16;;;;;7037:287;-1:-1:-1;;7037:287:42:o;7329:277::-;7396:6;7449:2;7437:9;7428:7;7424:23;7420:32;7417:52;;;7465:1;7462;7455:12;7417:52;7497:9;7491:16;7550:5;7543:13;7536:21;7529:5;7526:32;7516:60;;7572:1;7569;7562:12;7743:127;7804:10;7799:3;7795:20;7792:1;7785:31;7835:4;7832:1;7825:15;7859:4;7856:1;7849:15;7875:127;7936:10;7931:3;7927:20;7924:1;7917:31;7967:4;7964:1;7957:15;7991:4;7988:1;7981:15;8007:446;8257:2;8246:9;8239:21;8296:1;8291:2;8280:9;8276:18;8269:29;-1:-1:-1;;;8329:2:42;8318:9;8314:18;8307:35;8380:3;8373:4;8362:9;8358:20;8351:33;8220:4;8401:46;8442:3;8431:9;8427:19;8419:6;8401:46;:::i;8458:232::-;8497:3;8518:17;;;8515:140;;8577:10;8572:3;8568:20;8565:1;8558:31;8612:4;8609:1;8602:15;8640:4;8637:1;8630:15;8515:140;-1:-1:-1;8682:1:42;8671:13;;8458:232::o",
    "linkReferences": {
      "lib/foundry-huff/src/HuffDeployer.sol": {
        "HuffDeployer": [
          {
            "start": 465,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "add1()": "0035921a",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testAdd1()": "3670c2f6",
    "testNonMatchingSelector(bytes32)": "c176f9f3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"add1\",\"outputs\":[{\"internalType\":\"contract Add1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAdd1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"callData\",\"type\":\"bytes32\"}],\"name\":\"testNonMatchingSelector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testNonMatchingSelector(bytes32)\":{\"notice\":\"Test that a non-matching selector reverts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Add1.t.sol\":\"Add1Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc1363-payable-token/=lib/erc1363-payable-token/\",\":erc1363/=lib/erc1363-payable-token/\",\":forge-std/=lib/forge-std/src/\",\":foundry-huff/=lib/foundry-huff/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-stringutils/=lib/foundry-huff/lib/solidity-stringutils/\",\":solmate/=lib/solmate/\",\":stringutils/=lib/foundry-huff/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/foundry-huff/lib/solidity-stringutils/strings.sol\":{\"keccak256\":\"0x9e064fd116cdd5ed4b0132d0606a372bd94ff243c0520bc723fb6b09e947c16e\",\"urls\":[\"bzz-raw://93d1a36262aa498a85ac7a275ead2cf410b9c674d6bef09d0972203cb33b724e\",\"dweb:/ipfs/QmY9T4HKDbPXEZPHzXaFbd2M86fV1Q68sBJYh8J9LDFApU\"]},\"lib/foundry-huff/src/HuffConfig.sol\":{\"keccak256\":\"0x4a6d498faece6525a06922cecc01c7354ac6f69f4c94afa5f8ebe9ee2c2fd3df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c578631755aa86e8e27a42fa6b5f0a97311f7efb2c3185b4988521df1218e32\",\"dweb:/ipfs/QmatEdmh66GK7W41dMN9YXoGiZ1CzToxdbJSPX7FUdVmpB\"]},\"lib/foundry-huff/src/HuffDeployer.sol\":{\"keccak256\":\"0x21e5f49166a6975cab1357f95ccafac5cd5d13cc479d34ce3bdb78ed1fa71bfc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://109680c9544e4c767a6bc984c9bf26bfe59d240c6457f402e27c655d548ec350\",\"dweb:/ipfs/QmQGyVg2fcBmGYUCowK11DkHM5qQhYyoDCbcRRNiuSWzDf\"]},\"test/Add1.t.sol\":{\"keccak256\":\"0x6e5762505186c845410718ec5195fc5192a65359824b42da366a25611b037bb3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://902532872a1869597e1f86b52e9df169f34cb1d2ad6caea7036946e9cb08355a\",\"dweb:/ipfs/Qma5RKVQJWnfZneKLzZoaaZH5C9NTpwCxpRawaeEpdY6Db\"]},\"test/test-utils/NonMatchingSelectorHelper.sol\":{\"keccak256\":\"0x7e45b0d41c698da82bd76675b51cb30505caf3e4d68928396abb503af27343f1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5046e9b58d06515a2d8e5863a695760b4ef27d18a6858dae565302d891d49904\",\"dweb:/ipfs/QmRs28vMiTZ6owb9zWuhCqenWadG3TQxNdvFiUXPBWZ3pK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "add1",
          "outputs": [
            {
              "internalType": "contract Add1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAdd1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "callData",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNonMatchingSelector"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testNonMatchingSelector(bytes32)": {
            "notice": "Test that a non-matching selector reverts"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc1363-payable-token/=lib/erc1363-payable-token/",
        ":erc1363/=lib/erc1363-payable-token/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-huff/=lib/foundry-huff/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solidity-stringutils/=lib/foundry-huff/lib/solidity-stringutils/",
        ":solmate/=lib/solmate/",
        ":stringutils/=lib/foundry-huff/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Add1.t.sol": "Add1Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/foundry-huff/lib/solidity-stringutils/strings.sol": {
        "keccak256": "0x9e064fd116cdd5ed4b0132d0606a372bd94ff243c0520bc723fb6b09e947c16e",
        "urls": [
          "bzz-raw://93d1a36262aa498a85ac7a275ead2cf410b9c674d6bef09d0972203cb33b724e",
          "dweb:/ipfs/QmY9T4HKDbPXEZPHzXaFbd2M86fV1Q68sBJYh8J9LDFApU"
        ],
        "license": null
      },
      "lib/foundry-huff/src/HuffConfig.sol": {
        "keccak256": "0x4a6d498faece6525a06922cecc01c7354ac6f69f4c94afa5f8ebe9ee2c2fd3df",
        "urls": [
          "bzz-raw://9c578631755aa86e8e27a42fa6b5f0a97311f7efb2c3185b4988521df1218e32",
          "dweb:/ipfs/QmatEdmh66GK7W41dMN9YXoGiZ1CzToxdbJSPX7FUdVmpB"
        ],
        "license": "Apache-2.0"
      },
      "lib/foundry-huff/src/HuffDeployer.sol": {
        "keccak256": "0x21e5f49166a6975cab1357f95ccafac5cd5d13cc479d34ce3bdb78ed1fa71bfc",
        "urls": [
          "bzz-raw://109680c9544e4c767a6bc984c9bf26bfe59d240c6457f402e27c655d548ec350",
          "dweb:/ipfs/QmQGyVg2fcBmGYUCowK11DkHM5qQhYyoDCbcRRNiuSWzDf"
        ],
        "license": "Apache-2.0"
      },
      "test/Add1.t.sol": {
        "keccak256": "0x6e5762505186c845410718ec5195fc5192a65359824b42da366a25611b037bb3",
        "urls": [
          "bzz-raw://902532872a1869597e1f86b52e9df169f34cb1d2ad6caea7036946e9cb08355a",
          "dweb:/ipfs/Qma5RKVQJWnfZneKLzZoaaZH5C9NTpwCxpRawaeEpdY6Db"
        ],
        "license": "BUSL-1.1"
      },
      "test/test-utils/NonMatchingSelectorHelper.sol": {
        "keccak256": "0x7e45b0d41c698da82bd76675b51cb30505caf3e4d68928396abb503af27343f1",
        "urls": [
          "bzz-raw://5046e9b58d06515a2d8e5863a695760b4ef27d18a6858dae565302d891d49904",
          "dweb:/ipfs/QmRs28vMiTZ6owb9zWuhCqenWadG3TQxNdvFiUXPBWZ3pK"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Add1.t.sol",
    "id": 31431,
    "exportedSymbols": {
      "Add1": [
        31334
      ],
      "Add1Test": [
        31430
      ],
      "DSTest": [
        1786
      ],
      "HuffConfig": [
        31082
      ],
      "HuffDeployer": [
        31317
      ],
      "NonMatchingSelectorHelper": [
        34364
      ],
      "StdAssertions": [
        3260
      ],
      "StdChains": [
        3954
      ],
      "StdCheats": [
        6205
      ],
      "StdInvariant": [
        6495
      ],
      "StdStorage": [
        7245
      ],
      "StdStyle": [
        9889
      ],
      "StdUtils": [
        10696
      ],
      "Test": [
        10745
      ],
      "TestBase": [
        1846
      ],
      "Vm": [
        12065
      ],
      "console": [
        20129
      ],
      "console2": [
        28225
      ],
      "stdError": [
        6271
      ],
      "stdJson": [
        7071
      ],
      "stdMath": [
        7213
      ],
      "stdStorage": [
        8678
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1165:20",
    "nodes": [
      {
        "id": 31319,
        "nodeType": "PragmaDirective",
        "src": "37:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31320,
        "nodeType": "ImportDirective",
        "src": "63:28:20",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31431,
        "sourceUnit": 10746,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31322,
        "nodeType": "ImportDirective",
        "src": "92:55:20",
        "nodes": [],
        "absolutePath": "lib/foundry-huff/src/HuffConfig.sol",
        "file": "foundry-huff/HuffConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31431,
        "sourceUnit": 31083,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31321,
              "name": "HuffConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31082,
              "src": "100:10:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31324,
        "nodeType": "ImportDirective",
        "src": "148:59:20",
        "nodes": [],
        "absolutePath": "lib/foundry-huff/src/HuffDeployer.sol",
        "file": "foundry-huff/HuffDeployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31431,
        "sourceUnit": 31318,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31323,
              "name": "HuffDeployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31317,
              "src": "156:12:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31326,
        "nodeType": "ImportDirective",
        "src": "208:85:20",
        "nodes": [],
        "absolutePath": "test/test-utils/NonMatchingSelectorHelper.sol",
        "file": "./test-utils/NonMatchingSelectorHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31431,
        "sourceUnit": 34365,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31325,
              "name": "NonMatchingSelectorHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34364,
              "src": "216:25:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31334,
        "nodeType": "ContractDefinition",
        "src": "295:82:20",
        "nodes": [
          {
            "id": 31333,
            "nodeType": "FunctionDefinition",
            "src": "316:59:20",
            "nodes": [],
            "functionSelector": "a8365728",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add1",
            "nameLocation": "325:4:20",
            "parameters": {
              "id": 31329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31328,
                  "mutability": "mutable",
                  "name": "num",
                  "nameLocation": "338:3:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 31333,
                  "src": "330:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "329:13:20"
            },
            "returnParameters": {
              "id": 31332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31333,
                  "src": "366:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "365:9:20"
            },
            "scope": 31334,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Add1",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          31334
        ],
        "name": "Add1",
        "nameLocation": "305:4:20",
        "scope": 31431,
        "usedErrors": []
      },
      {
        "id": 31430,
        "nodeType": "ContractDefinition",
        "src": "379:822:20",
        "nodes": [
          {
            "id": 31341,
            "nodeType": "VariableDeclaration",
            "src": "438:16:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "0035921a",
            "mutability": "mutable",
            "name": "add1",
            "nameLocation": "450:4:20",
            "scope": 31430,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Add1_$31334",
              "typeString": "contract Add1"
            },
            "typeName": {
              "id": 31340,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31339,
                "name": "Add1",
                "nameLocations": [
                  "438:4:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31334,
                "src": "438:4:20"
              },
              "referencedDeclaration": 31334,
              "src": "438:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Add1_$31334",
                "typeString": "contract Add1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31356,
            "nodeType": "FunctionDefinition",
            "src": "461:90:20",
            "nodes": [],
            "body": {
              "id": 31355,
              "nodeType": "Block",
              "src": "485:66:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31344,
                      "name": "add1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31341,
                      "src": "495:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Add1_$31334",
                        "typeString": "contract Add1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "41646431",
                              "id": 31350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "536:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd1b70884cba4e483fa8f2c0c3bb8870bf797e96d7e13124a74d45d7996a6104",
                                "typeString": "literal_string \"Add1\""
                              },
                              "value": "Add1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dd1b70884cba4e483fa8f2c0c3bb8870bf797e96d7e13124a74d45d7996a6104",
                                "typeString": "literal_string \"Add1\""
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31346,
                                  "name": "HuffDeployer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31317,
                                  "src": "507:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_HuffDeployer_$31317_$",
                                    "typeString": "type(library HuffDeployer)"
                                  }
                                },
                                "id": 31347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "520:6:20",
                                "memberName": "config",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31101,
                                "src": "507:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_delegatecall_nonpayable$__$returns$_t_contract$_HuffConfig_$31082_$",
                                  "typeString": "function () returns (contract HuffConfig)"
                                }
                              },
                              "id": 31348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "507:21:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HuffConfig_$31082",
                                "typeString": "contract HuffConfig"
                              }
                            },
                            "id": 31349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "529:6:20",
                            "memberName": "deploy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31081,
                            "src": "507:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) payable external returns (address)"
                            }
                          },
                          "id": 31351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "507:36:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31345,
                        "name": "Add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31334,
                        "src": "502:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Add1_$31334_$",
                          "typeString": "type(contract Add1)"
                        }
                      },
                      "id": 31352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "502:42:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Add1_$31334",
                        "typeString": "contract Add1"
                      }
                    },
                    "src": "495:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Add1_$31334",
                      "typeString": "contract Add1"
                    }
                  },
                  "id": 31354,
                  "nodeType": "ExpressionStatement",
                  "src": "495:49:20"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "470:5:20",
            "parameters": {
              "id": 31342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:20"
            },
            "returnParameters": {
              "id": 31343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:20"
            },
            "scope": 31430,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31387,
            "nodeType": "FunctionDefinition",
            "src": "557:243:20",
            "nodes": [],
            "body": {
              "id": 31386,
              "nodeType": "Block",
              "src": "584:216:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3431",
                            "id": 31362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "613:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_41_by_1",
                              "typeString": "int_const 41"
                            },
                            "value": "41"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_41_by_1",
                              "typeString": "int_const 41"
                            }
                          ],
                          "expression": {
                            "id": 31360,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31341,
                            "src": "603:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Add1_$31334",
                              "typeString": "contract Add1"
                            }
                          },
                          "id": 31361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "608:4:20",
                          "memberName": "add1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31333,
                          "src": "603:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure external returns (uint256)"
                          }
                        },
                        "id": 31363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "603:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3432",
                        "id": 31364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      },
                      {
                        "hexValue": "416464312834312920657870656374656420746f2072657475726e203432",
                        "id": 31365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ed99810fcca170419a705edc08a8d77cec075c721bb2c7194af66eb9d71b005",
                          "typeString": "literal_string \"Add1(41) expected to return 42\""
                        },
                        "value": "Add1(41) expected to return 42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ed99810fcca170419a705edc08a8d77cec075c721bb2c7194af66eb9d71b005",
                          "typeString": "literal_string \"Add1(41) expected to return 42\""
                        }
                      ],
                      "id": 31359,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "594:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 31366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31367,
                  "nodeType": "ExpressionStatement",
                  "src": "594:61:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3233",
                            "id": 31371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "684:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_23_by_1",
                              "typeString": "int_const 23"
                            },
                            "value": "23"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_23_by_1",
                              "typeString": "int_const 23"
                            }
                          ],
                          "expression": {
                            "id": 31369,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31341,
                            "src": "674:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Add1_$31334",
                              "typeString": "contract Add1"
                            }
                          },
                          "id": 31370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "679:4:20",
                          "memberName": "add1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31333,
                          "src": "674:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure external returns (uint256)"
                          }
                        },
                        "id": 31372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "674:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3234",
                        "id": 31373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "689:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      {
                        "hexValue": "416464312832332920657870656374656420746f2072657475726e203234",
                        "id": 31374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "693:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eddb47e185301d83ec9fb24e00b684763ea986646bb8e35c3b40b6e77aed3cdf",
                          "typeString": "literal_string \"Add1(23) expected to return 24\""
                        },
                        "value": "Add1(23) expected to return 24"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eddb47e185301d83ec9fb24e00b684763ea986646bb8e35c3b40b6e77aed3cdf",
                          "typeString": "literal_string \"Add1(23) expected to return 24\""
                        }
                      ],
                      "id": 31368,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "665:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 31375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31376,
                  "nodeType": "ExpressionStatement",
                  "src": "665:61:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "755:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 31378,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31341,
                            "src": "745:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Add1_$31334",
                              "typeString": "contract Add1"
                            }
                          },
                          "id": 31379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "750:4:20",
                          "memberName": "add1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31333,
                          "src": "745:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure external returns (uint256)"
                          }
                        },
                        "id": 31381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "745:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 31382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "759:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4164643128302920657870656374656420746f2072657475726e2031",
                        "id": 31383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "762:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d043c1c852f6d533cbe24622860366b80ff6dd4a5d5d99a5c8dd775b8a6c2562",
                          "typeString": "literal_string \"Add1(0) expected to return 1\""
                        },
                        "value": "Add1(0) expected to return 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d043c1c852f6d533cbe24622860366b80ff6dd4a5d5d99a5c8dd775b8a6c2562",
                          "typeString": "literal_string \"Add1(0) expected to return 1\""
                        }
                      ],
                      "id": 31377,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "736:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 31384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31385,
                  "nodeType": "ExpressionStatement",
                  "src": "736:57:20"
                }
              ]
            },
            "functionSelector": "3670c2f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAdd1",
            "nameLocation": "566:8:20",
            "parameters": {
              "id": 31357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:2:20"
            },
            "returnParameters": {
              "id": 31358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:20"
            },
            "scope": 31430,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31429,
            "nodeType": "FunctionDefinition",
            "src": "864:335:20",
            "nodes": [],
            "body": {
              "id": 31428,
              "nodeType": "Block",
              "src": "922:277:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31397,
                      "mutability": "mutable",
                      "name": "func_selectors",
                      "nameLocation": "948:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 31428,
                      "src": "932:30:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31395,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 31396,
                        "nodeType": "ArrayTypeName",
                        "src": "932:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31403,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "978:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 31400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "965:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31398,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "969:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 31399,
                        "nodeType": "ArrayTypeName",
                        "src": "969:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 31402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "965:15:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "932:48:20"
                },
                {
                  "expression": {
                    "id": 31410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31404,
                        "name": "func_selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31397,
                        "src": "990:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 31406,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 31405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1005:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "990:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 31407,
                          "name": "Add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31334,
                          "src": "1010:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Add1_$31334_$",
                            "typeString": "type(contract Add1)"
                          }
                        },
                        "id": 31408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1015:4:20",
                        "memberName": "add1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31333,
                        "src": "1010:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function Add1.add1(uint256) pure returns (uint256)"
                        }
                      },
                      "id": 31409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1020:8:20",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1010:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "990:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 31411,
                  "nodeType": "ExpressionStatement",
                  "src": "990:38:20"
                },
                {
                  "assignments": [
                    31413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31413,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1044:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 31428,
                      "src": "1039:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 31412,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31422,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31415,
                        "name": "func_selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31397,
                        "src": "1093:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      {
                        "id": 31416,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31390,
                        "src": "1121:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31419,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31341,
                            "src": "1151:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Add1_$31334",
                              "typeString": "contract Add1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Add1_$31334",
                              "typeString": "contract Add1"
                            }
                          ],
                          "id": 31418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1143:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31417,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1143:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1143:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31414,
                      "name": "nonMatchingSelectorHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34363,
                      "src": "1054:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes4[] memory,bytes32,address) returns (bool)"
                      }
                    },
                    "id": 31421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:112:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1039:127:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1183:8:20",
                        "subExpression": {
                          "id": 31424,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31413,
                          "src": "1184:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31423,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1176:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1176:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31427,
                  "nodeType": "ExpressionStatement",
                  "src": "1176:16:20"
                }
              ]
            },
            "documentation": {
              "id": 31388,
              "nodeType": "StructuredDocumentation",
              "src": "806:53:20",
              "text": "@notice Test that a non-matching selector reverts"
            },
            "functionSelector": "c176f9f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNonMatchingSelector",
            "nameLocation": "873:23:20",
            "parameters": {
              "id": 31391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31390,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "905:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 31429,
                  "src": "897:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "896:18:20"
            },
            "returnParameters": {
              "id": 31392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:0:20"
            },
            "scope": 31430,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31335,
              "name": "Test",
              "nameLocations": [
                "400:4:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10745,
              "src": "400:4:20"
            },
            "id": 31336,
            "nodeType": "InheritanceSpecifier",
            "src": "400:4:20"
          },
          {
            "baseName": {
              "id": 31337,
              "name": "NonMatchingSelectorHelper",
              "nameLocations": [
                "406:25:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34364,
              "src": "406:25:20"
            },
            "id": 31338,
            "nodeType": "InheritanceSpecifier",
            "src": "406:25:20"
          }
        ],
        "canonicalName": "Add1Test",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31430,
          34364,
          10745,
          1846,
          1843,
          10696,
          6495,
          6205,
          5526,
          3954,
          3260,
          1786
        ],
        "name": "Add1Test",
        "nameLocation": "388:8:20",
        "scope": 31431,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 20
}